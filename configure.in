dnl Process this file with autoconf to produce a configure script.

m4_ifdef([HAS_TOP],[m4_ignore],[   
AC_INIT(install-sh)
AC_PREREQ([2.50])
AC_CONFIG_HEADER(config.h)
])

AC_SUBST(CLIB_TARGETS)
AC_SUBST(CLIB_PLTARGETS)
AC_SUBST(CLIB_NETLIBS)
AC_SUBST(CLIB_CRYPTLIBS)
AC_SUBST(CLIB_CRYPTOBJ)
AC_SUBST(CLIB_LIBUUID)

m4_ifdef([HAS_TOP],[m4_ignore],[   
m4_include([../ac_swi_c.m4])
])

CLIB_TARGETS="socket.$SO cgi.$SO memfile.$SO files.$SO mime.$SO crypt.$SO time.$SO"

case "$PLARCH" in
    *-win32|*-win64)
        AC_CHECK_LIB(ws2_32, main,
                     [CLIB_NETLIBS="$CLIB_NETLIBS -lws2_32"])
        AC_CHECK_LIB(gdi32, main,
                     [CLIB_NETLIBS="$CLIB_NETLIBS -lgdi32"])
        ;;
    *)
        CLIB_TARGETS="$CLIB_TARGETS uid.$SO unix.$SO"
        ;;
esac

AC_CHECK_FUNC(socket, [], [
             AC_CHECK_LIB(socket, socket,
                      [CLIB_NETLIBS="$CLIB_NETLIBS -lsocket"; LIBS="$LIBS -lsocket"]
                      AC_DEFINE(HAVE_LIBSOCKET, 1,
                      "Define if you have the socket library (-lsocket)."))])
AC_CHECK_FUNC(gethostent, [], [
             AC_CHECK_LIB(nsl, gethostent,
                      [CLIB_NETLIBS="$CLIB_NETLIBS -lnsl"]
                      AC_DEFINE(HAVE_LIBNSL, 1,
                      "Define if you have the nsl library (-lnsl)."))])

dnl Configure UUID library.  We use the OSSP UUID library, but it seems
dnl to be installed in various places.

if test x"$CLIB_LIBUUID" = "x"; then
AC_CHECK_LIB(ossp-uuid, uuid_create,
	     [ CLIB_LIBUUID=-lossp-uuid
	     ])
fi
if test x"$CLIB_LIBUUID" = "x"; then
AC_CHECK_LIB(uuid, uuid_create,
	     [ CLIB_LIBUUID=-luuid
	     ])
fi
if test x"$CLIB_LIBUUID" = "x"; then
  AC_MSG_WARN([ Cannot find libossp-uuid or libuuid -- dropping uuid.pl])
else
  if test x"$UUID_H" = "x"; then
  AC_CHECK_HEADER(ossp/uuid.h,
		  [ UUID_H=ossp/uuid.h ],
		  [],
		  [/*first*/])
  fi
  if test x"$UUID_H" = "x"; then
  AC_CHECK_HEADER(uuid.h,
		  [ UUID_H=uuid.h ],
		  [],
		  [/*first*/])
  fi
  if test x"$UUID_H" = "x"; then
    AC_MSG_WARN([ Cannot find uuid.h -- dropping uuid.pl])
  else
    AC_DEFINE_UNQUOTED([UUID_H], [<$UUID_H>],
	      [ Define to name of the UUID header file. ])
    CLIB_TARGETS="$CLIB_TARGETS uuid.$SO"
  fi
fi


oldlibs="$LIBS"
AC_CHECK_LIB(crypt, crypt)
CLIB_CRYPTLIBS="$LIBS"
AC_CHECK_FUNC(crypt,
	      [],
	      [CLIB_CRYPTOBJ=bsd-crypt.o])
AC_DEFINE(HAVE_CRYPT, 1,
	  "Define if you have the crypt function.")
LIBS="$oldlibs"

AC_CHECK_FUNC(syslog,
	      [ CLIB_TARGETS="$CLIB_TARGETS syslog.$SO" ],
	      AC_MSG_WARN([Cannot find syslog"()" -- dropping syslog.pl]))

AC_MSG_CHECKING("Configuring MIME libraries")
case "$CC" in
	.*) ACC="../../$CC"
	    ;;
	*)  ACC="$CC"
esac
case "$LD" in
	.*) ALD="../../$LD"
	    ;;
	*)  ALD="$LD"
esac
case "$CPP" in
	.*) ACPP="../../$CPP"
	;;
	*) ACPP="$CPP"
esac
m4_ifdef([HAS_TOP],[
( if test x"$SYSROOT" != x; then
   CC="$ACC  --sysroot=$SYSROOT"; LD=$ALD; CPP="$ACPP  --sysroot=$SYSROOT"; CFLAGS=$SHLIB_CFLAGS; LDFLAGS=$LDFLAGS;
  else
   CC=$ACC; LD=$ALD; CPP=$ACPP; CFLAGS=$SHLIB_CFLAGS; LDFLAGS=$LDFLAGS;
  fi
  export CC LD CFLAGS LDFLAGS;
  mkdir -p packages/clib/maildrop/rfc822;
  mkdir -p packages/clib/maildrop/rfc2045;
  MIME_DIR=`dirname "$srcdir"/packages/clib/maildrop`
  MIME_DIR=`cd $MIME_DIR && pwd`
  ( cd packages/clib/maildrop/rfc822  && $CONFIG_SHELL "$MIME_DIR"/maildrop/rfc822/configure --host=$host)
  ( cd packages/clib/maildrop/rfc2045  && $CONFIG_SHELL "$MIME_DIR"/maildrop/rfc2045/configure --host=$host))
]
,[   
( CC=$ACC; LD=$ALD; CPP=$ACPP; CFLAGS=$CFLAGS; LDFLAGS=$LDFLAGS;
  export CC LD CFLAGS LDFLAGS

  (cd maildrop/rfc822 &&  $CONFIG_SHELL configure --host=$host)
  (cd maildrop/rfc2045 && $CONFIG_SHELL configure --host=$host)
)
])

AC_MSG_CHECKING(h_errno)
AC_TRY_COMPILE(
[
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <netinet/in.h>
],
[ int x = h_errno;
], AC_DEFINE(HAVE_H_ERRNO, 1,
	     [Define of h_errno is provided])
   AC_MSG_RESULT(yes),
   AC_MSG_RESULT(no))

AC_CHECK_HEADERS(malloc.h alloca.h unistd.h sys/time.h fcntl.h utime.h)
AC_CHECK_HEADERS(execinfo.h sys/resource.h crypt.h syslog.h)
AC_CHECK_HEADERS(sys/types.h sys/wait.h sys/stat.h)
AC_CHECK_HEADERS(netinet/tcp.h crt_externs.h)

AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(long long, 8)

AC_CHECK_FUNCS(setsid strerror utime getrlimit strcasestr vfork _NSGetEnviron)
AC_CHECK_FUNCS(pipe2)
AC_CHECK_TYPES(socklen_t, [], [],
[
#include <sys/types.h>
#include <sys/socket.h>
])
AC_CHECK_TYPES(ssize_t, [], [],
[
#include <sys/types.h>
#include <sys/socket.h>
])

AC_MSG_CHECKING(_XOPEN_SOURCE)
AC_TRY_COMPILE(
[
#define _XOPEN_SOURCE
#include <unistd.h>
],
[
], AC_DEFINE(DEFINE_XOPEN_SOURCE, 1,
	     "Define if _XOPEN_SOURCE is needed")
   AC_MSG_RESULT(yes),
   AC_MSG_RESULT(no))

with_time=yes
AC_ARG_WITH(time, [  --without-time		  Exclude alarm library],
	    [case "$withval" in
		yes)	with_time=yes ;;
		no)     with_time=no ;;
	     esac])

if test "$ac_cv_func_getrlimit" = "yes"; then
  CLIB_TARGETS="$CLIB_TARGETS rlimit.$SO"
else
  AC_MSG_WARN([Cannot find getrlimit"()" -- dropping rlimit.pl])
fi

CLIB_PLTARGETS=`echo $CLIB_TARGETS | sed -e "s/\.$SO/.pl/g" -e "s/files.pl/filesex.pl/"`
if echo "$CLIB_PLTARGETS" | grep socket.pl 2>&1 >/dev/null; then
  CLIB_PLTARGETS="$CLIB_PLTARGETS streampool.pl"
fi

m4_ifdef([HAS_TOP],[m4_ignore],[   
AC_OUTPUT(Makefile)
])


